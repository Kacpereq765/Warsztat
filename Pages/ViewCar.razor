@page "/ViewCar"
@using MudBlazor
@using Blazored.LocalStorage
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage

<h3>Samochody do naprawy</h3>

@if (cars == null)
{
    <p><em>Ładowanie...</em></p>
}
else if (cars.Count == 0)
{
    <p>Brak samochodów do wyświetlenia.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Model</th>
                <th>Rocznik</th>
                <th>Opis zepsucia</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>@car.Model</td>
                    <td>@car.Year</td>
                    <td>@car.Broken</td>
                </tr>
            }
        </tbody>
    </table>
}

<MudContainer>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToAddCar">
        Dodaj Samochód
    </MudButton>
</MudContainer>

@code {
    private List<Car> cars;

    protected override async Task OnInitializedAsync()
    {
        // Wczytanie samochodów z localStorage
        cars = await localStorage.GetItemAsync<List<Car>>("cars") ?? new List<Car>();
    }

    private void NavigateToAddCar()
    {
        NavigationManager.NavigateTo("/AddCar");
    }

    public class Car
    {
        public string Model { get; set; }
        public int Year { get; set; }
        public string Broken { get; set; }
    }
}
